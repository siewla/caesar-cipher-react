{"version":3,"sources":["rot13.js","components/Decode.js","components/Encode.js","App.js","index.js"],"names":["rot13","str","toUpperCase","solved","i","length","asciiCode","charCodeAt","String","fromCharCode","Decode","props","handleChange","event","setState","input","target","value","output","state","id","onChange","this","Component","Encode","App","ReactDOM","render","document","getElementById"],"mappings":"wMAIe,SAASA,EAAOC,GAC3BA,EAAMA,EAAIC,cAEV,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAAI,CAChC,IAAIE,EAAYL,EAAIG,GAAGG,aAEnBJ,GADAG,GAAa,IAAMA,GAAa,GACtBE,OAAOC,aAAaH,EAAW,IAClCA,GAAa,IAAMA,GAAY,GAC5BE,OAAOC,aAAaH,EAAW,IAE/BL,EAAIG,GAGtB,OAAOD,ECdJ,IA6BQO,EA7Bf,kDACI,WAAaC,GAAO,IAAD,8BACf,cAAMA,IAOVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,MACpBC,OAAQlB,EAAMa,EAAMG,OAAOC,UAT/B,EAAKE,MAAQ,CACTJ,MAAO,GACPG,OAAQ,IAJG,EADvB,qDAiBQ,OACI,6BACI,sCACA,sCACA,8BAAUE,GAAK,QAAQC,SAAYC,KAAKV,aAAcK,MAAQK,KAAKH,MAAMJ,MAAMb,gBAC/E,gDACA,8BAAOoB,KAAKH,MAAMD,aAvBlC,GAA4BK,aC6BbC,EA7Bf,kDACI,WAAab,GAAO,IAAD,8BACf,cAAMA,IAOVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,MAAOF,EAAMG,OAAOC,MACpBC,OAAQlB,EAAMa,EAAMG,OAAOC,UAT/B,EAAKE,MAAQ,CACTJ,MAAO,GACPG,OAAQ,IAJG,EADvB,qDAiBQ,OACI,6BACI,sCACA,sCACA,8BAAUE,GAAK,QAAQC,SAAYC,KAAKV,aAAcK,MAAQK,KAAKH,MAAMJ,MAAMb,gBAC/E,gDACA,8BAAOoB,KAAKH,MAAMD,aAvBlC,GAA4BK,aCYbE,MAXf,WACE,OACE,6BACE,oDACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCLNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.3315c5bc.chunk.js","sourcesContent":["//ROT-13 - rotate by 13 places\n//Input\t    ABCDEFGHIJKLMNOPQRSTUVWXYZ\n//Output\tNOPQRSTUVWXYZABCDEFGHIJKLM\n\nexport default function rot13 (str) {\n    str = str.toUpperCase();\n    let solved = '';\n    for (let i = 0; i < str.length; i++){\n        let asciiCode = str[i].charCodeAt();\n        if (asciiCode >= 65 && asciiCode <= 77){\n            solved += String.fromCharCode(asciiCode +13);\n        } else if (asciiCode >= 78 && asciiCode <=90){\n            solved += String.fromCharCode(asciiCode -13);\n        } else {\n            solved += str[i];\n        }\n    }\n    return solved;\n}\n\n","import React, { Component } from 'react'\nimport rot13 from '../rot13'\n\nexport class Decode extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            input: '',\n            output: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            input: event.target.value,\n            output: rot13(event.target.value)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Decode</h1>\n                <p>Message</p>\n                <textarea id = \"input\" onChange = {this.handleChange} value ={this.state.input.toUpperCase()} />\n                <p>Decrypted Message</p>\n                <span>{this.state.output}</span>\n            </div>\n        )\n    }\n}\n\nexport default Decode\n","import React, { Component } from 'react'\nimport rot13 from '../rot13'\n\nexport class Encode extends Component {\n    constructor (props){\n        super(props)\n        this.state = {\n            input: '',\n            output: ''\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            input: event.target.value,\n            output: rot13(event.target.value)\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Encode</h1>\n                <p>Message</p>\n                <textarea id = \"input\" onChange = {this.handleChange} value ={this.state.input.toUpperCase()} />\n                <p>Encrypted Message</p>\n                <span>{this.state.output}</span>\n            </div>\n        )\n    }\n}\n\nexport default Encode","import React from 'react';\nimport Decode from './components/Decode';\nimport Encode from './components/Encode';\n\nfunction App() {\n  return (\n    <div>\n      <h1>Caesar Cipher ROT-13</h1>\n      <Decode />\n      <Encode />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}